apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingres-srv
  annotations:
    kubernetes.io/ingress.class: nginx    
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"    
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: REALTIMESERVERID    
spec:  
  rules:
    - host: employeeservice.com    
      http:
        paths:
          - path: /api/employees
            pathType: Prefix
            backend:
              service:
                name: gateway-clusterip-srv
                port:
                  number: 80
          - path: /notify
            pathType: Prefix
            backend:
              service:
                name: gateway-clusterip-srv
                port:
                  number: 80
          - path: /api/e
            pathType: Prefix
            backend:
              service:
                name: secondgateway-clusterip-srv
                port:
                  number: 80
    - host: employeeclient.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: employeeclient-clusterip-srv
                port:
                  number: 80
  tls:
  - hosts:
        - employeeclient.com
        - employeeservice.com    
    secretName: nginx-tls-secret